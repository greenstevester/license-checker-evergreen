name: CI

on:
  push:
    branches: [ main, master, develop, feat/*, fix/*, chore/* ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['24', '24', '24']
        exclude:
          # Skip some combinations to reduce CI load
          - os: windows-latest
            node-version: '24'
          - os: macos-latest
            node-version: '24'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'

      - name: Check formatting
        run: npm run prettier
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'

      - name: Test CLI binary
        run: node dist/bin/license-checker-evergreen.js --help
        if: matrix.os == 'ubuntu-latest'

      - name: Run CLI on self
        run: node dist/bin/license-checker-evergreen.js --json --onlyAllow "BSD-3-Clause;MIT;ISC;Apache-2.0;Python-2.0;CC-BY-4.0;BSD-2-Clause;BlueOak-1.0.0;CC-BY-3.0;CC0-1.0"
        if: matrix.os == 'ubuntu-latest'

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: npm audit --audit-level=high --production

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests with coverage
        run: npm run test:coverage

