name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"


      - name: Commit updated CHANGELOG.md
        run: |
          # Switch to main branch to make changes there
          git fetch origin main
          git checkout main
          git pull origin main
          
          # Regenerate changelog from main branch
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            RANGE="HEAD"
          else
            RANGE="$LAST_TAG..HEAD"
          fi

          # Create temporary changelog
          echo "# Changelog" > temp_changelog.md
          echo "" >> temp_changelog.md
          echo "## [${{ steps.extract_version.outputs.version }}] - $(date +%Y-%m-%d)" >> temp_changelog.md
          echo "" >> temp_changelog.md

          # Group commits by type
          echo "### üöÄ Features" >> temp_changelog.md
          git log --pretty=format:"- %s" $RANGE | grep -E "^- (feat|feature):" | sed 's/^- feat[ure]*: /- /' >> temp_changelog.md || echo "" >> temp_changelog.md
          echo "" >> temp_changelog.md

          echo "### üêõ Bug Fixes" >> temp_changelog.md
          git log --pretty=format:"- %s" $RANGE | grep -E "^- fix:" | sed 's/^- fix: /- /' >> temp_changelog.md || echo "" >> temp_changelog.md
          echo "" >> temp_changelog.md

          echo "### üîß Improvements" >> temp_changelog.md
          git log --pretty=format:"- %s" $RANGE | grep -E "^- (chore|refactor|perf|improvement):" | sed 's/^- [^:]*: /- /' >> temp_changelog.md || echo "" >> temp_changelog.md
          echo "" >> temp_changelog.md

          echo "### üìö Documentation" >> temp_changelog.md
          git log --pretty=format:"- %s" $RANGE | grep -E "^- docs?:" | sed 's/^- docs*: /- /' >> temp_changelog.md || echo "" >> temp_changelog.md
          echo "" >> temp_changelog.md

          echo "### Other Changes" >> temp_changelog.md
          git log --pretty=format:"- %s" $RANGE | grep -vE "^- (feat|feature|fix|chore|refactor|perf|improvement|docs?):" >> temp_changelog.md || echo "" >> temp_changelog.md
          echo "" >> temp_changelog.md

          # Prepend to existing CHANGELOG.md if it exists
          if [ -f CHANGELOG.md ]; then
            echo "" >> temp_changelog.md
            tail -n +2 CHANGELOG.md >> temp_changelog.md
          fi

          mv temp_changelog.md CHANGELOG.md
          
          # Commit changes if any
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          if ! git diff --staged --quiet; then
            git commit -m "docs: update CHANGELOG.md for v${{ steps.extract_version.outputs.version }}"
            git push origin main
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release v${{ steps.extract_version.outputs.version }}
          body: |
            Release v${{ steps.extract_version.outputs.version }}

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

            ## Installation
            ```bash
            npm install -g license-checker-evergreen@${{ steps.extract_version.outputs.version }}
            ```

            ## What's Changed
            - Full changelog available in CHANGELOG.md
            - Performance improvements and bug fixes
            - Enhanced test coverage

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
          files: ./license-checker-evergreen-v${{ steps.extract_version.outputs.version }}.tgz

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_OTP: ${{ secrets.NPM_OTP }}
        run: |
          # Verify package builds correctly
          npm run build
          npm pack --dry-run

          # Publish to NPM (with OTP support if provided)
          if [ -n "$NPM_OTP" ]; then
            npm publish --access public --otp="$NPM_OTP"
          else
            # Try without OTP first (for automation tokens)
            npm publish --access public || {
              echo "‚ùå NPM publish failed. If you're using 2FA:"
              echo "1. Use an NPM Automation token (recommended)"
              echo "2. Or add NPM_OTP secret with your current OTP code"
              echo "3. Automation tokens bypass 2FA: https://www.npmjs.com/settings/tokens"
              exit 1
            }
          fi

      - name: Create GitHub Release Assets
        run: |
          # Create tarball for GitHub release
          npm pack
          mv license-checker-evergreen-${{ steps.extract_version.outputs.version }}.tgz license-checker-evergreen-v${{ steps.extract_version.outputs.version }}.tgz

