name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to publish (e.g., v5.0.1)'
        required: true
        type: string

permissions:
  contents: read
  id-token: write  # Required for NPM provenance

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Verify package contents
        run: |
          npm pack --dry-run
          echo "Package contents:"
          npm pack --json | jq -r '.[0].files[].path' | sort

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.tag }}"
            VERSION=${VERSION#v}  # Remove 'v' prefix if present
          else
            VERSION=$(node -p "require('./package.json').version")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Check if version already exists on NPM
        run: |
          if npm view license-checker-evergreen@${{ steps.version.outputs.version }} version 2>/dev/null; then
            echo "Version ${{ steps.version.outputs.version }} already exists on NPM"
            exit 1
          else
            echo "Version ${{ steps.version.outputs.version }} is new, proceeding with publish"
          fi

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Enable NPM provenance for supply chain security
          npm publish --access public --provenance
          echo "Successfully published license-checker-evergreen@${{ steps.version.outputs.version }}"

      - name: Verify NPM publication
        run: |
          # Wait a moment for NPM to propagate
          sleep 10
          
          # Verify the package is available
          if npm view license-checker-evergreen@${{ steps.version.outputs.version }} version; then
            echo "✅ Package successfully published and available on NPM"
          else
            echo "❌ Package publication verification failed"
            exit 1
          fi

      - name: Create success summary
        run: |
          echo "## 🎉 NPM Publication Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package:** license-checker-evergreen@${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**NPM Link:** https://www.npmjs.com/package/license-checker-evergreen/v/${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "npm install -g license-checker-evergreen@${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY